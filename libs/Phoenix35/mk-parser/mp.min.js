!function(e,t,n){"use strict";const o={name:"EBML",id:[0,440786851]},a={name:"Segment",id:[0,408125543],SeekHead:{name:"SeekHead",id:[0,290298740],Seek:{name:"Seek",id:[0,19899],ID:{name:"SeekID",id:[0,21419]},Position:{name:"SeekPosition",id:[0,21420]}}},Info:{name:"SegmentInfo",id:[0,357149030],UID:{name:"SegmentUID",id:[0,29604]},Filename:{name:"SegmentFilename",id:[0,29572]},PrevUID:{name:"PrevUID",id:[0,3979555]},PrevFilename:{name:"PrevFilename",id:[0,3965867]},NextUID:{name:"NextUID",id:[0,4110627]},NextFilename:{name:"NextFilename",id:[0,4096955]},TimecodeScale:{name:"TimecodeScale",id:[0,2807729],def:1e6},Duration:{name:"Duration",id:[0,17545]},DateUTC:{name:"DateUTC",id:[0,17505]},Title:{name:"Title",id:[0,31657]},MuxingApp:{name:"MuxingApp",id:[0,19840]},WritingApp:{name:"WritingApp",id:[0,22337]}},Tracks:{name:"Tracks",id:[0,374648427],Entry:{name:"TrackEntry",id:[0,174],Number:{name:"TrackNumber",id:[0,215]},UID:{name:"TrackUID",id:[0,29637]},Type:{name:"TrackType",id:[0,131]},FlagEnabled:{},FlagDefault:{},FlagLacing:{},MinCache:{},MaxCache:{},DefaultDuration:{name:"DefaultDuration",id:[0,2352003]},TimecodeScale:{name:"TrackTimecodescale",id:[0,2306383],def:1},Name:{name:"Name",id:[0,21358]},Language:{name:"Language",id:[0,2274716],def:"eng"},CodecID:{name:"CodecID",id:[0,134]},CodecPrivate:{},CodecName:{},CodecSettings:{},CodecInfoURL:{},CodecDownloadURL:{},CodecDecodeAll:{},TrackOverlay:{},Video:{name:"Video",id:[0,224],FlagInterlaced:{id:[0,154],def:0},StereoMode:{id:[0,21432],def:0},PixelWidth:{name:"PixelWidth",id:[0,176]},PixelHeight:{name:"PixelHeight",id:[0,186]},DisplayWidth:{name:"DisplayWidth",id:[0,21680]},DisplayHeight:{name:"DisplayHeight",id:[0,21690]},DisplayUnit:{name:"DisplayUnit",id:[0,21682],def:0},AspectRatioType:{id:[0,21683],def:0},ColourSpace:{id:[0,3061028]},GammaValue:{id:[0,3126563]}},Audio:{name:"Audio",id:[0,225],SamplingFrequency:{id:[0,181],def:s(32768)},OutputSamplingFrequency:{id:[0,30901],def:s(32768)},Channels:{id:[0,148],def:1},ChannelsPositions:{id:[0,32123]},BitDepth:{id:[0,25188]}},ContentEncodings:{}}}},r={size:function(){return"number"!=typeof this.value?"":this.value>=1073741824?(this.value/1073741824).toFixed(2)+" GiB":this.value>=1048576?(this.value/1048576).toFixed(2)+" MiB":(this.value/1024).toFixed(2)+" KiB"},duration:function(){let e=Math.ceil(this.value/1e6),t=~~(e%1e3),n=~~(e/1e3%60),o=~~(e/6e4%60),a=~~(e/36e5%24);return(a=a<10?"0"+a:a)+":"+(o=o<10?"0"+o:o)+":"+(n=n<10?"0"+n:n)+"."+(t=("00"+t).slice(-3))},type:{1:"video",2:"audio",3:"complex",16:"logo",17:"subtitle",18:"button",32:"control"}};Math.log1p=Math.log1p||(e=>Math.log(1+e));let i=(e,t)=>Math.ceil(Math.log1p(e)/Math.log(t)),l=e=>e.size+"-"+e.name.replace(/[^0-9a-zA-Z_-]/gim,"");function s(e){var t=2147483648&e?-1:1,n=(e>>23&255)-127,o=8388607&e;if(128==n)return t*(o?Number.NaN:Number.POSITIVE_INFINITY);if(-127==n){if(0==o)return 0*t;n=-126,o/=1<<22}else o=(o|1<<23)/(1<<23);return t*o*Math.pow(2,n)}DataView.prototype.getUint24=function(e){var t=new Uint8Array(this.buffer,this.byteOffset+e);return t[0]<<16|t[1]<<8|t[2]};let d,c=n=>{let o,a;e.getSelection&&(a=e.getSelection(),(o=t.createRange()).selectNodeContents(n),a.removeAllRanges(),a.addRange(o))},f={};f.fetchFile=function(e){return(d=new Promise(function(t,n){let o=new FileReader;o.onloadend=function(o){o.target.readyState===FileReader.DONE?(0===o.target.result.byteLength&&n(Error("Empty file")),t(e)):n(Error(o))},o.onerror=function(e){n(Error(e))},o.readAsArrayBuffer(e.slice(0,1))}).catch(t=>{f.Error(t,"Fetching file",e.name,"failed!")})).readBytes=function(t=0,n=e.size){return this.then(function(){return new Promise((o,a)=>{let r=new FileReader;r.onloadend=function(e){if(e.target.readyState===FileReader.DONE){let t=new Uint8Array(e.target.result,0);0===t.byteLength&&a(Error("Empty file")),o([d,t])}else a(Error(e))},r.onerror=function(e){a(Error(e))},r.readAsArrayBuffer(e.slice(t,n))}).catch(o=>{f.Error(o,"Reading bytes",t,"to",n,"from",e.name,"failed!")})})},d},f.inputFile=(e=>{for(let t of e)t.UID=l(t),f.displayInfo(t);return!1}),f.displayInfo=(e=>{let t,n,i,l,s,d,c,u,m,g={};t=f.fetchFile(e).readBytes(0,255).then(t=>(console.log(),console.group(e.UID),i=0,n=t[1],f.HTMLText("Reading file "+e.name+"..."),console.log("Reading first few bytes to confirm EBML"),[l,i]=f.seekElement(n,o,i),l||f.Error(new Error("First bytes do not correspond to EBML"),e.name+" is not a Matroska file"),console.log("EBML found"),console.log("Searching for SeekHead"),[l,i]=f.seekElement(n,a.SeekHead,i,null,!0),console.log("SeekHead found. Searching for SegmentInfo and Tracks"),(s=f.seekPosition(n,a.Info,l.offset))?console.log("SegmentInfo found"):(console.log("SegmentInfo not found. Searching for secondary SeekHead"),c=f.seekPosition(n,a.SeekHead,l.offset)),(d=f.seekPosition(n,a.Tracks,l.offset))?(console.log("Tracks found"),[t[0],t[0].readBytes(l.offset+s,l.offset+s+15),t[0].readBytes(l.offset+d,l.offset+d+15)]):(console.log("Tracks not found. Go to secondary SeekHead"),t[0].readBytes(l.offset+c).then(e=>(u=l.offset,console.log("Secondary SeekHead found at offset",c),[l,i]=f.seekElement(e[1],a.SeekHead,0,null,!0),console.log("Searching for SegmentInfo"),(s=f.seekPosition(e[1],a.Info,l.offset))||f.Error(new Error("SegmentInfo not found"),"Malformed matroska file"),console.log("SegmentInfo found"),console.log("Searching for Tracks"),(d=f.seekPosition(e[1],a.Tracks,l.offset))?(console.log("Tracks found"),l.offset=u,[e[0],e[0].readBytes(u+s,u+s+15),e[0].readBytes(u+d,u+d+15)]):(console.log("Tracks not found"),[e[0],e[0].readBytes(u+s,u+s+15)])))))).then(t=>(t[1].then(n=>{console.log("Serializing SegmentInfo"),[m,i]=f.elementSize(n[1],a.Info),u=l.offset+s,t[0].readBytes(u+i,u+i+4294967296*m[0]+m[1]).then(t=>({name:e.name.substr(0,e.name.lastIndexOf("."))||e.name,size:{value:e.size,toHuman:r.size},UID:f.sumBytes(f.seekElement(t[1],a.Info.UID,0,null,!0)[0].value),duration:{value:(f.sumBytes(f.seekElement(t[1],a.Info.TimecodeScale,0,null,!1)[0].value)[0]||a.Info.TimecodeScale.def)*f.getFloat(f.seekElement(t[1],a.Info.Duration,0,null,!1)[0].value),toHuman:r.duration},title:f.bytesToString(f.seekElement(t[1],a.Info.Title,0,null,!1)[0].value)||void 0})).then(e=>{g=e})}),t)).then(e=>{e[2]&&e[2].then(t=>{console.log("Serializing Tracks"),[m,i]=f.elementSize(t[1],a.Tracks),u=l.offset+d,e[0].readBytes(u+i,u+i+4294967296*m[0]+m[1]).then(e=>f.splitTracks(e[1]).map(function(e){e=e.value;let t={id:f.seekElement(e,this.Number,0,null,!0)[0].value[0],type:r.type[f.seekElement(e,this.Type,0,null,!0)[0].value[0]],name:f.bytesToString(f.seekElement(e,this.Name,0,null,!1)[0].value)||void 0,language:f.bytesToString(f.seekElement(e,this.Language,0,null,!1)[0].value)||this.Language.def,codec:f.bytesToString(f.seekElement(e,this.CodecID,0,null,!0)[0].value)};return this.Video.id[1],t},a.Tracks.Entry)).then(e=>{g.tracks=e,console.log("Successful operation!"),console.log(g),console.groupEnd(),f.HTMLText(g)})})}).then(e=>{}).catch(t=>{console.group(),console.info("Process aborted for",e.UID),console.log(t),console.groupEnd()})}),f.sumBytes=((e=[],t=0,n=-1)=>(t<0&&(t=e.length+t),n<0&&(n=e.length+n),++n-t>4?[f.sumUint32(e.slice(t,t+4)),f.sumBytes(e.slice(t+4,n))].reduce((e,t)=>e.concat(t),[]):[f.sumUint32(e.slice(t,n))])),f.sumUint32=((e=[])=>(e.length>4&&f.Error("Incorrect sumUint32 call. Array length was "+e.length),e.reduce((e,t)=>256*e+t,0))),f.getFloat=((e=new ArrayBuffer)=>(ArrayBuffer.isView(e)&&void 0!==e.BYTES_PER_ELEMENT&&(e=e.buffer),e.byteLength<4?0:4===e.byteLength?new DataView(e).getFloat32(0,!1):new DataView(e).getFloat64(0,!1))),f.seekElement=((e,t,n=0,o=e.length,a=!1)=>{let r,l,s,d,c,u,m=n;if(!(e instanceof Uint8Array))try{e=Uint8Array.from(e)}catch(e){f.Error(e)}switch(t.id[0]&&f.Error(new Error("ID "+t.name+" > 4 bytes"),"I do not deal with this shit yet"),l=new DataView(e.buffer),s=i(t.id[1],256)){case 4:l.method=DataView.prototype.getUint32;break;case 3:l.method=DataView.prototype.getUint24;break;case 2:l.method=DataView.prototype.getUint16;break;case 1:l.method=DataView.prototype.getUint8;break;default:f.Error(new Error(t.name+" ID.length outside range of 1-4 bytes"),"ID of",t.name,"not consistent with specs.")}o=o||e.byteLength;try{for(;r!==t.id[1]&&n<o;)r=l.method(n),++n}catch(e){if(!a)return[!1,m];f.Error(new Error("Mandatory element "+t.name+" not found"),"Malformed matroska file.")}return m=--n,d=r,n+=s,n+=(c=f.readVint(e,n))[1],u=e.slice(n,n+4294967296*c[0][0]+c[0][1]),n+=4294967296*c[0][0]+c[0][1],[{id:d,offset:m,length:c[0],value:u},n]}),f.seekPosition=((e,t,n=0,o=e.length)=>{let r,l,s;if(!(e instanceof Uint8Array))try{e=Uint8Array.from(e)}catch(e){f.Error(e)}switch(t.id[0]&&f.Error(new Error("ID "+t.name+" > 4 bytes"),"I do not deal with this shit yet"),l=new DataView(e.buffer),s=i(t.id[1],256)){case 4:l.method=DataView.prototype.getUint32;break;case 3:l.method=DataView.prototype.getUint24;break;case 2:l.method=DataView.prototype.getUint16;break;case 1:l.method=DataView.prototype.getUint8;break;default:f.Error(new Error(t.name+" ID.length outside range of 1-4 bytes"),"ID of",t.name,"not consistent with specs.")}try{for(;r!==t.id[1]&&n<o;)r=l.method(n),++n}catch(e){return!1}return f.seekElement(e.slice(--n),a.SeekHead.Seek.Position)[0].value.reduce((e,t)=>256*e+t)}),f.splitTracks=(e=>{let t,n=0,o=[];for(;n<e.byteLength;)[t,n]=f.seekElement(e,a.Tracks.Entry,n,null,!1),o.push(t);return o}),f.elementSize=((e,t)=>{let n=i(t.id[0],256)+i(t.id[1],256),o=f.readVint(e.slice(n,n+8));return[o[0],n+o[1]]}),f.readVint=((e,t=0)=>{let n,o=9-i(e[t],2);return 9===o&&f.Error(new Error("Integer > 56 bits forbidden"),"Incorrect matroska file."),(n=f.sumBytes(e.slice(t,t+o)))[0]=1<<i(n[0],2)-1^n[0],[1===n.length?[0,n[0]]:n,o]}),f.bytesToString=((e=[])=>String.fromCharCode(...e)),f.HTMLText=((e,n={})=>{let o,a,r;e instanceof Array||(e=[e]);for(let i in e){o=t.createElement("div");for(let e in n)"className"===e?o.className=n[e]:o.style[e]=n[e];"object"==typeof e[i]?((a=t.createElement("pre")).addEventListener("click",function(){c(this)},!1),(r=t.createElement("code")).className="language-json",r.appendChild(t.createTextNode(JSON.stringify(e[i],function(e,t){return t&&t.toHuman?t.toHuman():t},"  "))),a.appendChild(r),o.appendChild(a)):o.appendChild(t.createTextNode("\n"+e[i]+"\n")),t.body.appendChild(o)}}),f.Error=((e,...t)=>{throw e instanceof Error&&t.length&&f.HTMLText(t.join(" ")+" - Reason: "+e.message,{color:"red"}),e}),t.addEventListener("DOMContentLoaded",()=>{t.querySelector('input[type="file"]').addEventListener("change",function(e){f.inputFile(this.files)},!1);let e=t.getElementById("dropzone");e.ondragover=e.ondragenter=function(e){e.stopPropagation(),e.preventDefault(),this.className="hover"},e.ondragleave=e.ondragexit=function(e){e.stopPropagation(),e.preventDefault(),this.className=""},e.ondrop=function(e){e.stopPropagation(),e.preventDefault(),this.className="",f.inputFile(e.dataTransfer.files)}})}(window,document);
